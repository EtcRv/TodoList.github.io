{"version":3,"sources":["store/index.js","components/todoForm.js","components/todoList.js","App.js","index.js","App.module.css","components/todoForm.module.css","components/todoList.module.css"],"names":["listOfData","createSlice","name","initialState","lists","totalWork","reducers","addWorkToList","state","action","newItem","payload","push","id","value","removeWorkToList","filter","list","removeAllWork","store","configureStore","reducer","todolist","listActions","actions","TodoForm","useState","input","setInput","dispatch","useDispatch","flag","trim","length","className","classes","inputField","onSubmit","event","preventDefault","Math","floor","random","type","placeholder","onChange","target","active","class","TodoList","useSelector","todoList","map","icon","onClick","App","numberOfTask","wrapper","footer","ReactDOM","render","document","getElementById","module","exports"],"mappings":"yMAEMA,EAAaC,YAAY,CAC3BC,KAAM,WACNC,aAAa,CACTC,MAAO,GACPC,UAAW,GAEfC,SAAU,CACNC,cADM,SACQC,EAAOC,GACjB,IAAMC,EAAUD,EAAOE,QACvBH,EAAMJ,MAAMQ,KAAK,CAACC,GAAIH,EAAQG,GAAIC,MAAOJ,EAAQI,QACjDN,EAAMH,WAAY,GAEtBU,iBANM,SAMWP,EAAOC,GACpB,IAAMI,EAAKJ,EAAOE,QAClBH,EAAMJ,MAAQI,EAAMJ,MAAMY,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,KAAOA,KACrDL,EAAMH,aAEVa,cAXM,SAWQV,GACVA,EAAMJ,MAAQ,GACdI,EAAMH,UAAW,MAKvBc,EAAQC,YAAe,CACzBC,QAAS,CAACC,SAAUtB,EAAWqB,WAGtBE,EAAcvB,EAAWwB,QAEvBL,I,sDCSAM,EAnCE,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAWC,cACbC,GAAM,EAmBV,OAH2B,IAAxBJ,EAAMK,OAAOC,SACZF,GAAO,GAGP,uBAAMG,UAAWC,IAAQC,WAAYC,SAnBf,SAACC,GACvBA,EAAMC,iBAENV,EAASN,EAAYhB,cAAc,CAC/BM,GAAI2B,KAAKC,MAAsB,IAAhBD,KAAKE,UACpB5B,MAAOa,KAEXC,EAAS,KAYT,UACI,uBACIe,KAAK,OACLC,YAAY,oBACZ9B,MAAOa,EACPkB,SAda,SAACP,GACtBV,EAASU,EAAMQ,OAAOhC,UAelB,wBAAQoB,UAAWH,EAAI,UAAMI,IAAQY,QAAW,GAAhD,SAAoD,mBAAGC,MAAM,sB,gBCZ1DC,MAlBf,WACI,IAAMpB,EAAWC,cACX1B,EAAQ8C,aAAY,SAAA1C,GAAK,OAAIA,EAAMc,SAASlB,SAElD,OACI,oBAAI8B,UAAWC,IAAQgB,SAAvB,SACK/C,EAAMgD,KAAI,SAACnC,GACR,OAAQ,+BACJ,qBAAKiB,UAAWC,IAAQkB,KAAMC,QAAS,kBAAMzB,EAASN,EAAYR,iBAAiBE,EAAKJ,MAAxF,SACI,mBAAGmC,MAAM,mBAEZ/B,EAAKH,QAJOG,EAAKJ,UCUvB0C,MAhBf,WACE,IAAMC,EAAeN,aAAY,SAAA1C,GAAK,OAAIA,EAAMc,SAASjB,aACnDwB,EAAWC,cACjB,OACE,sBAAKI,UAAWC,IAAQsB,QAAxB,UACE,8CACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,yBAAQvB,UAAWC,IAAQuB,OAA3B,sBACYF,EADZ,iBAEE,wBAAQtB,UAAWsB,EAAY,UAAMrB,IAAQY,QAAS,GAAIO,QAAS,kBAAMzB,EAASN,EAAYL,kBAA9F,8BCXRyC,IAASC,OACT,cAAC,IAAD,CAAUzC,MAAOA,EAAjB,SACI,cAAC,EAAD,MACS0C,SAASC,eAAe,U,kBCRrCC,EAAOC,QAAU,CAAC,QAAU,qBAAqB,OAAS,oBAAoB,OAAS,sB,kBCAvFD,EAAOC,QAAU,CAAC,WAAa,6BAA6B,OAAS,2B,kBCArED,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,0B","file":"static/js/main.ea218528.chunk.js","sourcesContent":["import { configureStore, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst listOfData = createSlice({\r\n    name: 'todolist',\r\n    initialState:{\r\n        lists: [],\r\n        totalWork: 0,\r\n    },\r\n    reducers: {\r\n        addWorkToList(state, action) {\r\n            const newItem = action.payload;\r\n            state.lists.push({id: newItem.id, value: newItem.value})\r\n            state.totalWork +=1;\r\n        },\r\n        removeWorkToList(state, action) {\r\n            const id = action.payload;\r\n            state.lists = state.lists.filter(list => list.id !== id )\r\n            state.totalWork --;\r\n        },\r\n        removeAllWork(state) {\r\n            state.lists = [];\r\n            state.totalWork =0;\r\n        }\r\n    }\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer: {todolist: listOfData.reducer}\r\n});\r\n\r\nexport const listActions = listOfData.actions;\r\n\r\nexport default store;","import React, {useState} from 'react'\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { listActions } from '../store'\r\nimport classes from './todoForm.module.css'\r\n\r\nconst TodoForm = () => {\r\n    const [input, setInput] = useState('')\r\n    const dispatch = useDispatch();\r\n    let flag= false;\r\n    const submitFormHandler = (event) => {\r\n        event.preventDefault();\r\n        \r\n        dispatch(listActions.addWorkToList({\r\n            id: Math.floor(Math.random() * 10000),\r\n            value: input\r\n        }))\r\n        setInput('')\r\n    }\r\n\r\n    const typeInputHandler = (event) => {\r\n        setInput(event.target.value);\r\n        \r\n    }\r\n    \r\n    if(input.trim().length !== 0){\r\n        flag = true;\r\n    }\r\n    return (\r\n        <form className={classes.inputField} onSubmit={submitFormHandler}>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Add your new todo\" \r\n                value={input}\r\n                onChange={typeInputHandler}\r\n            />\r\n            <button className={flag ? `${classes.active}` : ''}><i class=\"fas fa-plus\"></i></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React from 'react'\r\n\r\nimport classes from './todoList.module.css'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { listActions } from '../store'\r\n\r\nfunction TodoList() {\r\n    const dispatch = useDispatch();\r\n    const lists = useSelector(state => state.todolist.lists)\r\n    \r\n    return (\r\n        <ul className={classes.todoList}>\r\n            {lists.map((list) => {\r\n                return (<li key={list.id}>\r\n                    <div className={classes.icon} onClick={() => dispatch(listActions.removeWorkToList(list.id))} >\r\n                        <i class=\"fas fa-trash\"></i>\r\n                    </div>\r\n                    {list.value}\r\n                </li>)\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { listActions } from './store';\nimport classes from './App.module.css'\nimport TodoForm from \"./components/todoForm\";\nimport TodoList from './components/todoList';\n\n\nfunction App() {\n  const numberOfTask = useSelector(state => state.todolist.totalWork);\n  const dispatch = useDispatch()\n  return (\n    <div className={classes.wrapper}>\n      <header>Todo App</header>\n      <TodoForm />\n      <TodoList />\n      <footer className={classes.footer}>\n        You have {numberOfTask} pending tasks\n        <button className={numberOfTask ? `${classes.active}`:''} onClick={() => dispatch(listActions.removeAllWork())} >Clear All</button>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/index'\n\nReactDOM.render(\n<Provider store={store}>\n    <App  />\n</Provider>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2xIr2\",\"footer\":\"App_footer__2P5gh\",\"active\":\"App_active__2vTxE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"todoForm_inputField__3blFb\",\"active\":\"todoForm_active__33ybU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"todoList_todoList__3Mq2J\",\"icon\":\"todoList_icon__24UQu\"};"],"sourceRoot":""}