{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dunga\\\\Desktop\\\\01-starting-project\\\\src\\\\components\\\\todoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { listActions } from '../store';\nimport classes from './todoForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = () => {\n  _s();\n\n  const [input, setInput] = useState('');\n  const dispatch = useDispatch();\n  let flag = false;\n\n  const submitFormHandler = event => {\n    event.preventDefault();\n    dispatch(listActions.addWorkToList({\n      id: Math.floor(Math.random() * 10000),\n      value: input\n    }));\n    setInput('');\n  };\n\n  const typeInputHandler = event => {\n    setInput(event.target.value);\n  };\n\n  if (input.trim().length !== 0) {\n    flag = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.inputField,\n    onSubmit: submitFormHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add your new todo\",\n      value: input,\n      onChange: typeInputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: flag ? `${classes.active}` : '',\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoForm, \"POESrjAbW0/qnwHH0Xnp2L9g8Y4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/dunga/Desktop/01-starting-project/src/components/todoForm.js"],"names":["React","useState","useDispatch","listActions","classes","TodoForm","input","setInput","dispatch","flag","submitFormHandler","event","preventDefault","addWorkToList","id","Math","floor","random","value","typeInputHandler","target","trim","length","inputField","active"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAIO,IAAI,GAAE,KAAV;;AACA,QAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,cAAN;AAEAJ,IAAAA,QAAQ,CAACL,WAAW,CAACU,aAAZ,CAA0B;AAC/BC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CAD2B;AAE/BC,MAAAA,KAAK,EAAEZ;AAFwB,KAA1B,CAAD,CAAR;AAIAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GARD;;AAUA,QAAMY,gBAAgB,GAAIR,KAAD,IAAW;AAChCJ,IAAAA,QAAQ,CAACI,KAAK,CAACS,MAAN,CAAaF,KAAd,CAAR;AAEH,GAHD;;AAKA,MAAGZ,KAAK,CAACe,IAAN,GAAaC,MAAb,KAAwB,CAA3B,EAA6B;AACzBb,IAAAA,IAAI,GAAG,IAAP;AACH;;AACD,sBACI;AAAM,IAAA,SAAS,EAAEL,OAAO,CAACmB,UAAzB;AAAqC,IAAA,QAAQ,EAAEb,iBAA/C;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,mBAFhB;AAGI,MAAA,KAAK,EAAEJ,KAHX;AAII,MAAA,QAAQ,EAAEa;AAJd;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAQ,MAAA,SAAS,EAAEV,IAAI,GAAI,GAAEL,OAAO,CAACoB,MAAO,EAArB,GAAyB,EAAhD;AAAA,6BAAoD;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAjCD;;GAAMnB,Q;UAEeH,W;;;KAFfG,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react'\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { listActions } from '../store'\r\nimport classes from './todoForm.module.css'\r\n\r\nconst TodoForm = () => {\r\n    const [input, setInput] = useState('')\r\n    const dispatch = useDispatch();\r\n    let flag= false;\r\n    const submitFormHandler = (event) => {\r\n        event.preventDefault();\r\n        \r\n        dispatch(listActions.addWorkToList({\r\n            id: Math.floor(Math.random() * 10000),\r\n            value: input\r\n        }))\r\n        setInput('')\r\n    }\r\n\r\n    const typeInputHandler = (event) => {\r\n        setInput(event.target.value);\r\n        \r\n    }\r\n    \r\n    if(input.trim().length !== 0){\r\n        flag = true;\r\n    }\r\n    return (\r\n        <form className={classes.inputField} onSubmit={submitFormHandler}>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Add your new todo\" \r\n                value={input}\r\n                onChange={typeInputHandler}\r\n            />\r\n            <button className={flag ? `${classes.active}` : ''}><i class=\"fas fa-plus\"></i></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}